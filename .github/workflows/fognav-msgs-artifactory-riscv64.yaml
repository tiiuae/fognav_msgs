name: Push fognav_msgs to Riscv64 Artifactory Debian Repo

on:
  push:
    branches: [ riscv64_support ]
  workflow_dispatch:

jobs:
  tii-deb-build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        ros2_distro: [galactic]
    steps:
      - name: Maximize build space
        uses: easimon/maximize-build-space@master
        with:
          root-reserve-mb: 512
          swap-size-mb: 1024
          remove-dotnet: 'true'
          remove-haskell: 'true'
          remove-android: 'true'

      - name: Checkout drone-yocto repo
        uses: actions/checkout@v3
        with:
          repository: tiiuae/drone-yocto
          ref: fog_hyper_supports
          submodules: recursive
          ssh-key: ${{ secrets.ACCESS_REPO_TOKEN }}
          path: drone-yocto

      - name: Checkout fognav\_msgs repo
        uses: actions/checkout@v3
        with:
          path: fognav_msgs

      - name: Modify fognav_msgs recipe in drone-yocto
        env:
          RECIPE_FILE_PATH: meta-ssrc-ros2/recipes-app/fog-navigation-lite
          RECIPE_FILE_PATTERN: fognav-msgs_*-0.bb
        run: |
          set -eux
          pushd fognav_msgs > /dev/null
          # Get current fognav_msgs version
          VERSION=$(grep '<version>' package.xml | sed 's/<\/\?version>//g' | awk '{$1=$1};1')
          popd > /dev/null

          pushd drone-yocto > /dev/null
          # Create a recipe for fognav_msgs version X
          mkdir $RECIPE_FILE_PATH/tmp
          mv $RECIPE_FILE_PATH/$RECIPE_FILE_PATTERN $RECIPE_FILE_PATH/tmp/fognav-msgs_$VERSION-0.bb
          mv $RECIPE_FILE_PATH/tmp/$RECIPE_FILE_PATTERN $RECIPE_FILE_PATH/
          rm -rf $RECIPE_FILE_PATH/tmp
          # Fix src branch
          sed -i "s/=main/=${GITHUB_REF##*/}/g" $RECIPE_FILE_PATH/$RECIPE_FILE_PATTERN
          # Fix SRCREV
          sed -i "s/SRCREV.*/SRCREV = \"$GITHUB_SHA\"/" $RECIPE_FILE_PATH/$RECIPE_FILE_PATTERN
          cat $RECIPE_FILE_PATH/$RECIPE_FILE_PATTERN
          popd > /dev/null

      - name: Run yocto distro build
        run: |
          pushd drone-yocto > /dev/null
          sudo apt install -y chrpath diffstat
          TEMPLATECONF=meta-ssrc-ros2/conf/saluki-template source oe-init-build-env build-riscv
          cd .. # or cd to main dir
          DISTRO=drone bitbake fognav-msgs
          popd > /dev/null

      - name: Upload build
        uses: actions/upload-artifact@v2
        with:
          name: fognav_msgs_riscv64
          path: drone-yocto/build-riscv/tmp-glibc/deploy/deb/riscv64/fognav-msgs*.deb
          retention-days: 1

  artifactory:
    runs-on: ubuntu-latest
    needs: tii-deb-build
    if: github.event_name == 'push'
    steps:
      - name: Download builds
        uses: actions/download-artifact@v2
        with:
          name: fognav_msgs_riscv64
          path: bin/build_output
      - uses: jfrog/setup-jfrog-cli@v2
        env:
          JF_ARTIFACTORY_1: ${{ secrets.ARTIFACTORY_TOKEN }}
      - name: Upload to Artifactory
        env:
          ARTIFACTORY_REPO: ssrc-deb-public-local
          DISTRIBUTION: custom
          COMPONENT: saluki
          ARCHITECTURE: riscv64
          BUILD_NAME: fognav_msgs-riscv64
          CI: true
        run: |
          set -exu
          jfrog rt ping
          cd bin/build_output
          for pkg in *.deb
          do
            jfrog rt u --deb "$DISTRIBUTION/$COMPONENT/$ARCHITECTURE" \
                       --target-props COMMIT="$GITHUB_SHA" \
                       --build-name "$BUILD_NAME" \
                       --build-number "$GITHUB_SHA" \
                       "$pkg" \
                       "$ARTIFACTORY_REPO/riscv64/riscv64/$pkg"
          done
